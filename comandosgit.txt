//usuario
git config --global user.name

//email
git config --global user.email

//iniciar
git init
git status
git add
git commit -m <mensaje>

//viaje entre commits
git checkout <commit>

//Moverse entre las ramas
git checkout <rama>

//ver commits
git log

//eliminar commit sin tocar código
git reset —-soft <commit>

//eliminar commit tocando el código
git reset —-hard <commit>

//crear rama
git branch <nombre>

//crear rama
git branch <nombre>

//borrar rama 
git branch -D

//pararse en la rama master y luego se cargan los commits hechos en la rama de prueba 
git merge <nombre rama>

//crear y moverse a una rama
git checkout -b <nombre>

//instalar git en ubuntu
https://www.digitalocean.com/community/tutorials/how-to-install-git-on-ubuntu-14-04#how-to-set-up-git

//conectar el repositorio local con el remoto
git remote add origin <link del repositorio>

//Para ver el estado
git remote -v

//Para subirlo al repositorio remoto
git push origin master

//nota: editar .git/config del repositorio en [remote "origin"] y cambiar el nombre de usurio en url
https://youruser:password@github.com/user/repo.git

//o usar
git remote set-url origin https://yourusername@github.com/user/repo.git

//fuente
https://stackoverflow.com/questions/7438313/pushing-to-git-returning-error-code-403-fatal-http-request-failed

//si se ejecutó en modo root se corrige con
sudo chown -R "${USER:-$(id -un)}" .

//cambiar mensaje en commit
git commit --amend -m <"mensaje">

//forzar a hacer los cambios -f
git push origin master -f

//tags al ultimo commit Ej:v1.0
git tag <nombre tag>

//tags para cualquier commit
git tag -a <nombre tag> -m <"mensaje"> <número commit>

//subir tag al servidor remoto
git push origin <nombre tag>

//subir todos los tags
git push -u origin --tags

//para trabajar en equipo
//1) primero crear una organización en git
//luego clonar el repositorio
git clone <repositorio>

//mostrar ramas ocultas
git branch -a

//conectarse a la organización
git remote add origin <link repositorio>

//pasar cambios  cambios al repositorio local que no tiene los cambios a la rama oculta
git fetch origin

//pasa a la rama master, es decir bajar los cambios
git merge origin/master


//para proyectos de terceros
//usar fork para copiar repositorio
git clone <repositorio en nuestro github>

//add y commit

//actualizar nuevos cambios de la organización
git fetch upstream

//conexión con ssh
//generar llave
ssh key-gen

//Usar fetch y merge al mismo tiempo
git pull: fetch + merge
